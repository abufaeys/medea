language: rust

env:
  global:
    - secure: MLoB6bB/z1Ff6SWldgnS+o8iI7+ShuYlcPlcOrErdIc4dirRVLOhZNc+oDP4auhF5IsjTLMjRzre98I6kI2EYCHqx1HPEhiFPnA+d+tLl3l3Hgwqi2jTd1LcSnn62X9qazQNGUyhwB/itMQyswUBE7XEegNpFWYFOyvvI6JwoADwBMEA6Um9FnW2/NdkKTZvAqTjJ8o6axHLo58LGLekmUj2Fc+z5cbzbK/9CrXGvXihLs0ZGRQnKRtxknfFPKVam/aTPR5sFaAjJ5El9VjnCLJnX/uwt9rNjdK3DRwHf7Qeo3Gj867HhLi2ba4KRvhoZJcq4BEoXBZzOJWchqasPc2veOoiZOg5AUQNnjWPQ2dun3o9OaLySp3qhzQ8yxIS+9U1JLsd3pLhb2gBQNAwK92pzUS+WhwhwAv6QkODvROVJeG55N23u2a8Enk7SHR9KFFCaDqzor7vcmAtk8q7JkVwxXX6/yS43hNk9teF1Cox8kG26lYbQLA1/XXu8Z1+F0aXv5WpC9cHjWEPef87lHedB4gCs9erNJEF2gUCOpWWt/J9DCE6U9OizHuosDrqFfZQH+A3Y6c8Mh2TcLnc7BadqFUMvRwAV8bOzaBjfAVH+aGARyDbWfK8NtFtkw/lfoVLZ2nx4rPfo2oVOholRpProoj09vJe1QdruX+Sdew=
    - secure: tXgsViat9MxuqPcPqjbnQPAVw5iQGFi5M64IvYQqDSYCc3EbBaQe+I1NMcNcHM6XZ4VzINa5xnaeh8AJC2BOcmDnNt4Af+YyCZDuz7lQsE7kvKqGSCaKnNGr23P/FTVz64wLFIFbhnClL8Q+VHLkpzsxY6utjdhGfQfsIK0kdAQ2lHuXDbqQC0GA7fiz7hD41GblsnNQLaSPoMtpFYMN8ta5pyLIlTzrZ/QjOWFV7VC46A/AlPnkzRWuGYrayep622oFFQ365uiDoSzZBFu0+nHkdVuJxN05HYfSw/m1/XLoK8Ytu0Qm12D7I9H71lkX7IEjZwr/L+WIuJQCPU8mzB+Qh3TUE2mOMVA0DMwIJ572aJQqAFi1shXsyFn5MfMptOwILUHDBYFj9RJVA/pJUeND4DlQMLjldzYbEGv8Y2jL3hW7jrb9PRlXIhlYS0UR8rwAGdWRbNKezq3Ve2Z0tyIvOYgIDAs47Yj9VHLgthLiRJ5e/ptKt7rM4grqpiQnKo01Ss60XVA6Vab2h2gvIX2GK0N4TR6Kjy0cfHbBGrsO9J7dCKXosU6/rc61AfFj+Lb/CayZ0+FKRznNNJU+Sb2uylQHksgvvCHdsg8a60rfLPLm93G01CHIEMS1Sqw9xAE5wxbMSCZeV4ZCj5A8j45R09ISrt0UodbYhQPrPfY=

cache:
  cargo: true
  directories:
    - .cache/docker/

install:
  - rustc -vV
  - cargo -vV

jobs:
  allow_failures:
    - rust: nightly
      stage: build

  include:
#    - name: Clippy
#      stage: check
#      rust: stable
#      before_script: rustup component add clippy
#      script: make lint
#
#    - name: rustfmt
#      stage: check
#      rust: nightly
#      cache: false
#      before_script: rustup component add rustfmt
#      script: make fmt check=yes
#
#    - name: medea-jason (stable)
#      stage: build
#      rust: stable
#      before_script:
#        - rm -f /home/travis/.cargo/bin/wasm-pack
#        - curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
#      script:
#        - make release.npm crate=medea-jason publish=no

    - name: medea docker (stable)
      stage: build
      rust: stable
      script:
#        - make docker.build.medea debug=no TAG=${TRAVIS_BUILD_ID}
        - docker login -u="$QUAIO_PASS" -p="$QUAIO_USER"
#        - make docker.tar TAGS=${TRAVIS_BUILD_ID}
#        - ls .cache/docker/

#    - name: medea (beta)
#      stage: build
#      rust: beta
#      script: make build.medea
#
#    - name: medea (nightly)
#      stage: build
#      rust: nightly
#      script: make build.medea
#
#    - name: unit (stable)
#      stage: test
#      rust: stable
#      script: make test.unit crate=@all
#
#    - name: e2e signalling (stable)
#      stage: test
#      rust: stable
#      script:
#        - ls .cache/
#        - make docker.untar TAGS=${TRAVIS_BUILD_ID}
#        - make test.e2e dockerized=yes logs=yes TAG=${TRAVIS_BUILD_ID}

    - name: crates.io
      stage: release
      if: (tag IS present) AND (tag =~ ^medea[a-z-]*-[0-9]+\.[0-9]+\.[0-9]+)
      cache: false
      before_script:
        - export MEDEA_CRATE_NAME=$(echo $TRAVIS_TAG \
                        | sed -E "s/^(medea[a-z-]*)-[0-9]+\.[0-9]+\.[0-9]+/\1/")
      script:
        - echo "Releasing $MEDEA_CRATE_NAME to crates.io..."
      deploy:
        provider: script
        skip_cleanup: true
        script: make release.crates crate=$MEDEA_CRATE_NAME publish=yes
        on:
          tags: true

    - name: NPM
      stage: release
      if: (tag IS present) AND (tag =~ ^medea-jason-[0-9]+\.[0-9]+\.[0-9]+)
      cache: false
      before_script:
        - export MEDEA_CRATE_NAME=$(echo $TRAVIS_TAG \
                        | sed -E "s/^(medea[a-z-]*)-[0-9]+\.[0-9]+\.[0-9]+/\1/")
      script:
        - echo "Releasing $MEDEA_CRATE_NAME to NPM..."
      before_deploy:
        - echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
        - curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
      deploy:
        provider: script
        skip_cleanup: true
        script: make release.npm crate=$MEDEA_CRATE_NAME publish=yes
        on:
          tags: true

    - name: GitHub
      stage: release
      if: (tag IS present) AND (tag =~ ^medea[a-z-]*-[0-9]+\.[0-9]+\.[0-9]+)
      cache: false
      before_script:
        - export MEDEA_CRATE_NAME=$(echo $TRAVIS_TAG \
                        | sed -E "s/^(medea[a-z-]*)-[0-9]+\.[0-9]+\.[0-9]+/\1/")
      script:
        - echo "Releasing $MEDEA_CRATE_NAME to GitHub..."
      deploy:
        provider: releases
        skip_cleanup: true
        api_key: $GH_TOKEN
        name: $TRAVIS_TAG
        on:
          tags: true

stages:
  - name: check
    if: (branch = master AND type != pull_request) OR commit_message =~ /.*\[run ci\]/
  - name: build
    if: (branch = master AND type != pull_request) OR commit_message =~ /.*\[run ci\]/
  - name: test
    if: (branch = master AND type != pull_request) OR commit_message =~ /.*\[run ci\]/
  - name: tests
    if: (branch = master AND type != pull_request) OR commit_message =~ /.*\[run ci\]/

notifications:
  email:
    on_success: never
    on_failure: always
