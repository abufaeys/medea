language: rust
cache: cargo

install:
  - PROTOBUF_VERSION=3.3.0
  - PROTOC_FILENAME=protoc-${PROTOBUF_VERSION}-linux-x86_64.zip
  - pushd /home/travis
  - wget https://github.com/google/protobuf/releases/download/v${PROTOBUF_VERSION}/${PROTOC_FILENAME}
  - unzip ${PROTOC_FILENAME}
  - bin/protoc --version
  - popd
  - mkdir .cache
  - rustc -vV
  - cargo -vV

jobs:
  allow_failures:
    - rust: nightly
      stage: build

  include:
    - name: Clippy
      stage: check
      rust: stable
      before_script: rustup component add clippy
      script: make lint

    - name: rustfmt
      stage: check
      rust: nightly
      cache: false
      before_script: rustup component add rustfmt
      script: make fmt check=yes

    - name: medea-jason (stable)
      stage: build
      rust: stable
      before_script:
        - rm -f /home/travis/.cargo/bin/wasm-pack
        - curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
      script:
        - make release.npm crate=medea-jason publish=no

    - name: medea (stable)
      stage: build
      rust: stable
      script: make build.medea

    - name: medea (beta)
      stage: build
      rust: beta
      script: make build.medea

    - name: medea (nightly)
      stage: build
      rust: nightly
      script: make build.medea

    - name: unit (stable)
      stage: test
      rust: stable
      script: make test.unit crate=@all

    - name: e2e signalling (stable)
      stage: test
      rust: stable
      script: make test.e2e.signalling

    - name: e2e (latest Firefox, stable Rust)
      stage: test
      rust: stable
      script: make test.e2e.firefox

    - name: e2e (latest Chrome, stable Rust)
      stage: test
      rust: stable
      script: make test.e2e.chrome

    - name: crates.io
      stage: release
      if: (tag IS present) AND (tag =~ ^medea[a-z-]*-[0-9]+\.[0-9]+\.[0-9]+)
      cache: false
      before_script:
        - export MEDEA_CRATE_NAME=$(echo $TRAVIS_TAG \
                        | sed -E "s/^(medea[a-z-]*)-[0-9]+\.[0-9]+\.[0-9]+/\1/")
      script:
        - echo "Releasing $MEDEA_CRATE_NAME to crates.io..."
      deploy:
        provider: script
        skip_cleanup: true
        script: make release.crates crate=$MEDEA_CRATE_NAME publish=yes
        on:
          tags: true

    - name: NPM
      stage: release
      if: (tag IS present) AND (tag =~ ^medea-jason-[0-9]+\.[0-9]+\.[0-9]+)
      cache: false
      before_script:
        - export MEDEA_CRATE_NAME=$(echo $TRAVIS_TAG \
                        | sed -E "s/^(medea[a-z-]*)-[0-9]+\.[0-9]+\.[0-9]+/\1/")
      script:
        - echo "Releasing $MEDEA_CRATE_NAME to NPM..."
      before_deploy:
        - echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
        - curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
      deploy:
        provider: script
        skip_cleanup: true
        script: make release.npm crate=$MEDEA_CRATE_NAME publish=yes
        on:
          tags: true

    - name: GitHub
      stage: release
      if: (tag IS present) AND (tag =~ ^medea[a-z-]*-[0-9]+\.[0-9]+\.[0-9]+)
      cache: false
      before_script:
        - export MEDEA_CRATE_NAME=$(echo $TRAVIS_TAG \
                        | sed -E "s/^(medea[a-z-]*)-[0-9]+\.[0-9]+\.[0-9]+/\1/")
      script:
        - echo "Releasing $MEDEA_CRATE_NAME to GitHub..."
      deploy:
        provider: releases
        skip_cleanup: true
        api_key: $GH_TOKEN
        name: $TRAVIS_TAG
        on:
          tags: true

stages:
  - name: check
    if: (branch = master AND type != pull_request) OR commit_message =~ /.*\[run ci\]/
  - name: build
    if: (branch = master AND type != pull_request) OR commit_message =~ /.*\[run ci\]/
  - name: test
    if: (branch = master AND type != pull_request) OR commit_message =~ /.*\[run ci\]/
  - name: tests
    if: (branch = master AND type != pull_request) OR commit_message =~ /.*\[run ci\]/

notifications:
  email:
    on_success: never
    on_failure: always
