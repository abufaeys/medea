syntax = "proto2";

import "google/protobuf/any.proto";

package medea;

service ControlApi {
  rpc Create (CreateRequest) returns (Response);
  rpc Apply (ApplyRequest) returns (Response);
  rpc Delete (IdRequest) returns (Response);
  rpc Get (IdRequest) returns (GetResponse);
}
message CreateRequest {
  required string id = 1;
  oneof el {
    Hub hub = 2;
    FileRecorder file_recorder = 3;
    Member member = 4;
    Relay relay = 5;
    Room room = 6;
    WebRtcPlayEndpoint webrtc_play = 7;
    WebRtcPublishEndpoint webrtc_pub = 8;
  }
}
message ApplyRequest {
  required string id = 1;
  oneof el {
    Hub hub = 2;
    FileRecorder file_recorder = 3;
    Member member = 4;
    Relay relay = 5;
    Room room = 6;
    WebRtcPlayEndpoint webrtc_play = 7;
    WebRtcPublishEndpoint webrtc_pub = 8;
  }
  optional Policy policy = 9 [default = APPLY];

  enum Policy {
    APPLY = 1;
    APPEND = 2;
  }
}
message IdRequest {
  repeated string id = 1;
}
message Response {
  map<string, string> sid = 1;
  optional Error error = 2;
}
message GetResponse {
  map<string, Element> elements = 1;
  optional Error error = 2;
}
message Error {
  required uint32 status = 1;
  required uint32 code = 2;
  required string text = 3;
  optional string doc = 4;
  required string element = 5;
  optional google.protobuf.Any details = 6;
  repeated string backtrace = 7;
}

message Element {
  oneof el {
    Hub hub = 2;
    FileRecorder file_recorder = 3;
    Member member = 4;
    Relay relay = 5;
    Room room = 6;
    WebRtcPlayEndpoint webrtc_play = 7;
    WebRtcPublishEndpoint webrtc_pub = 8;
  }
}

message Room {
  map<string, Room.Element> pipeline = 1;

  message Element {
    oneof el {
      Hub hub = 1;
      FileRecorder file_recorder = 2;
      Member member = 3;
      Relay relay = 4;
      WebRtcPlayEndpoint webrtc_play = 5;
      WebRtcPublishEndpoint webrtc_pub = 6;
    }
  }
}

message Member {
  optional string on_join = 1;
  optional string on_leave = 2;
  required string credentials = 3;
  map<string, Member.Element> pipeline = 4;

  message Element {
    oneof el {
      Hub hub = 1;
      FileRecorder file_recorder = 2;
      Relay relay = 3;
      WebRtcPlayEndpoint webrtc_play = 4;
      WebRtcPublishEndpoint webrtc_pub = 5;
    }
  }
}

message WebRtcPublishEndpoint {
  optional P2P p2p = 1 [default = NEVER];
  optional string dst = 2;
  optional string on_start = 3;
  optional string on_stop = 4;

  enum P2P {
    NEVER = 0;
    IF_POSSIBLE = 1;
    ALWAYS = 2;
  }
}

message WebRtcPlayEndpoint {
  required string src = 1;
  optional string on_start = 2;
  optional string on_stop = 3;
}

message Hub {}

message FileRecorder {
  required string src = 1;
  required string dst = 2;
  optional string on_start = 3;
  optional string on_stop = 4;
}

message Relay {
  required string src = 1;
  optional string dst = 2;
}
